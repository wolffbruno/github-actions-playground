name: Trigger pipeline

on:
  workflow_run:
    workflows: ["Origin Pipeline"]
    types: requested

jobs:
  apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: wolffbruno/actions/get-tags-history@main
        id: get-tags-history
        if: startsWith(github.event.workflow_run.head_branch, 'prod.server')
        with:
          limit: 10
          token: ${{ secrets.GITHUB_TOKEN }}
          query: "prod.server"

      - uses: dorny/paths-filter@v2
        name: Check if ref branch has migrations
        id: filter
        if: startsWith(github.event.workflow_run.head_branch, 'prod.server')
        with:
          base: ${{ steps.get-tags-history.outputs.latest-tag }}
          ref: ${{ steps.get-tags-history.outputs.current-tag }}
          filters: |
            migrations:
              - '.github/workflows/**'

      - name: Get pipeline status
        id: get-pipeline-status
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { 
                name: workflowName, 
                conclusion, 
                status, 
                html_url: pipelineURL,
                head_commit: { message: commitMessage },
            } = context.payload.workflow_run;

            const hasMigrations = ${{ steps.filter.outputs.migrations && steps.filter.outputs.migrations || false }};
            const workflowLink = `<${pipelineURL}|${workflowName}>`;

            const messageMapping = {
                requested: `⏳ Pipeline ${workflowLink} is running`,
                in_progress: `⏳ Pipeline ${workflowLink} is running`,
                queued: `⏳ Pipeline ${workflowLink} is running`,
                completed: {
                    success: `✅ Pipeline ${workflowLink} completed successfully`,
                    failure: `❌ Pipeline ${workflowLink} failed`,
                    cancelled: `❌ Pipeline ${workflowLink} was cancelled`,
                    skipped: `❌ Pipeline ${workflowLink} was skipped`,
                    timed_out: `❌ Pipeline ${workflowLink} timed out`,
                    action_required: `❌ Pipeline ${workflowLink} requires action`,
                },
            }

            const statusMessage = messageMapping[status][conclusion] || messageMapping[status];
            const migrationMessage = hasMigrations ? ':alert: Contém migrations :alert:' : '';

            const message = `------------------------------------------------------------------
              ${statusMessage}

              ${migrationMessage}

              
              *Commit*: ${commitMessage}
              ------------------------------------------------------------------
            `;

            console.info(message);
